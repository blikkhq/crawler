blikk {
  # All actors bind to this API address
  api.host = ${?BLIKK_API_HOST}
  # The API actor binds to this port
  api.port = 8080
  api.port = ${?BLIKK_API_PORT}
  # The name of the main actor system
  actor-system-name = "blikk-crawler"
  # RabbitMQ configuration
  rabbitMQ.uri = "amqp://guest:guest@localhost:5672"
  rabbitMQ.uri = ${?BLIKK_RABBITMQ_URI}
  # Cluster seed configuration
  cluster.seedFile = ${?BLIKK_SEEDS_FILE}
}

akka {
  
  actor.provider = "akka.cluster.ClusterActorRefProvider"

  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    log-remote-lifecycle-events = off
    netty.tcp.hostname = ${?blikk.api.host}
    netty.tcp.port = ${?blikk.api.port}
  }

  cluster.auto-down-unreachable-after = 10s

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters-during-shutdown = false
  loglevel = "INFO"

  stream.materializer {
    # Initial size of buffers used in stream elements
    initial-input-buffer-size = 32
    # Maximum size of buffers used in stream elements
    max-input-buffer-size = 128
    # Initial size of fan-out buffers used in stream elements
    initial-fan-out-buffer-size = 32
    # Maximum size of fan-out buffers used in stream elements
    max-fan-out-buffer-size = 128
  }

}

spray.host-connector {
  pipelining = on
}